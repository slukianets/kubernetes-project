---
- hosts: all
  become: yes
  tasks:
# Install Docker
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - git

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io


  - name: Add user to Docker group
    become: no
    shell: sudo usermod -aG docker $USER

# Install Kubernetes

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes packet
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

# Create cluster
  - name: Initialize the Kubernetes cluster using kubeadm
    become: yes
    shell: kubeadm init --apiserver-advertise-address="$(hostname -I | awk '{print $1}')" --pod-network-cidr=10.32.0.0/12
    when: ansible_hostname == "k8s-master"

  - name: Setup kubeconfig for user
    become: no
    shell: "{{ item }}"
    with_items:
     - mkdir -p $HOME/.kube
     - sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
     - sudo chown "$(id -u):$(id -g)" $HOME/.kube/config
    when: ansible_hostname == "k8s-master"

  - name: Install Weave Net network
    become: no
    shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
    when: ansible_hostname == "k8s-master"

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command
    when: ansible_hostname == "k8s-master"

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
    when: ansible_hostname == "k8s-master"

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777
    when: inventory_hostname in {{ groups['k8s-node'] }}

  - name: Join the node to cluster
    become: yes
    shell: /bin/bash -c /tmp/join-command.sh
    when: inventory_hostname in {{ groups['k8s-node'] }}
